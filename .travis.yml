language: cpp

sudo: false

env: # need to allow failures

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - THXX_INSTALL=install-latest

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - THXX_INSTALL=install-latest

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-8
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-8
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - THXX_INSTALL=install-latest

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - g++-8
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - g++-8
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - THXX_INSTALL=install-latest

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - g++-8
            - clang-7
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - g++-8
            - clang-7
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
        - THXX_INSTALL=install-latest
  allow_failures:
  - env: THXX_INSTALL=install-latest


before_install:
    - eval "${MATRIX_EVAL}"

install:
  - if [[ $THXX_INSTALL == install-conda ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      source $HOME/miniconda/bin/activate;
      echo $CONDA_PREFIX;
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;
      conda info -a;
      conda install pytorch-cpu -c pytorch;
    else
      wget https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-latest.zip;
      unzip libtorch-shared-with-deps-latest.zip;
      INCPATH="-isystem $PWD/libtorch/include -isystem $PWD/libtorch/include/torch/csrc/api/include";
      LIBPATH=$PWD/libtorch/lib;
      USE_CUDA=false;
    fi
  - $CXX -v

script:
  - make
