language: cpp

sudo: false

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - THXX_INSTALL=install-latest

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - THXX_INSTALL=install-latest

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-8
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - g++-8
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - THXX_INSTALL=install-latest

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - g++-8
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - g++-8
            - clang-6.0
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
        - THXX_INSTALL=install-latest

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - g++-8
            - clang-7
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
        - THXX_INSTALL=install-conda
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-7
          packages:
            - g++-8
            - clang-7
      env:
        - MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
        - THXX_INSTALL=install-latest
  allow_failures:
    - env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" THXX_INSTALL=install-latest
    - env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8" THXX_INSTALL=install-latest
    - env: MATRIX_EVAL="CC=clang-5 && CXX=clang++-5" THXX_INSTALL=install-latest
    - env: MATRIX_EVAL="CC=clang-6 && CXX=clang++-6" THXX_INSTALL=install-latest
    - env: MATRIX_EVAL="CC=clang-7 && CXX=clang++-7" THXX_INSTALL=install-latest


before_install:
    - eval "${MATRIX_EVAL}"

script:
  - $CXX -v
  - if [[ $THXX_INSTALL == install-conda ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      source $HOME/miniconda/bin/activate;
      echo $CONDA_PREFIX;
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;
      conda info -a;
      conda install pytorch-cpu -c pytorch;
      make;n
    else
      wget https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-latest.zip;
      unzip libtorch-shared-with-deps-latest.zip;
      make INCPATH="-isystem $PWD/libtorch/include -isystem $PWD/libtorch/include/torch/csrc/api/include" LIBPATH=$PWD/libtorch/lib;
    fi
  - if [[ $THXX_INSTALL == install-conda ]] && [[ $CXX == g++-8 ]]; then
      sudo apt-get install -qq flex bison graphviz;
      wget https://github.com/doxygen/doxygen/archive/Release_1_8_15.tar.gz:
      tar -xf Release_1_8_15.tar.gz:
      cd ./doxygen-Release_1_8_15; mkdir -p build; cd build; cmake .. ; make DESTDIR=stage install;
      cd ../..;
      export PATH=`pwd`/doxygen-Release_1_8_15/build/stage/usr/local/bin/doxygen:$PATH;
      doxygen --version;
      pip install breathe;
      make doc;
      touch doc/doxgen/html/.nojekyll;
    fi


deploy:
  d: dmd
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN # Set in travis-ci.org dashboard
  local_dir: doc/doxgen/html
  on:
    branch: master
    condition: $THXX_INSTALL = install-conda && $CXX = g++-8
